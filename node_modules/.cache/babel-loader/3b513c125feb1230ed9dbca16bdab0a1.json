{"ast":null,"code":"var _jsxFileName = \"/Users/stephenrogers/Documents/react/reactapp/src/App.js\";\nimport React, { Component } from 'react';\nimport CharacterCard from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport characters from \"./characters.json\";\nimport Score from \"./components/Score\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters: characters,\n      score: 0\n    };\n\n    this.shuffleCharacter = id => {\n      // // Filter this.state.characters for characters with an id not equal to the id being removed\n      // const characters = this.state.characters.filter(character => character.id !== id);\n      // // Set this.state.characters equal to the new characters array\n      // this.setState({ characters });\n      this.shuffle(this.state.characters);\n      this.setState({\n        characters: this.state.characters\n      });\n    };\n\n    this.shuffle = array => {\n      let currentIndex = array.length,\n          temporaryValue,\n          randomIndex;\n\n      while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    };\n  }\n\n  // demo() {\n  //   const returnCharNames = this.state.characters.map(char => char.name);\n  //   return (\n  //     returnCharNames.map(name => {\n  //       if(name.includes('e')) {\n  //         return (<Title>This starts with a e</Title>)\n  //       } else {\n  //         return (<Title>{name}</Title>)\n  //       }\n  //     }\n  //     )\n  //   )\n  // }\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Choose Your Character\"), React.createElement(Score, {\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), this.state.characters.map(character => React.createElement(CharacterCard, {\n      shuffle: this.shuffleCharacter,\n      id: character.id,\n      key: character.key,\n      name: character.name,\n      image: character.image,\n      occupation: character.occupation,\n      location: character.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stephenrogers/Documents/react/reactapp/src/App.js"],"names":["React","Component","CharacterCard","Wrapper","Title","characters","Score","App","state","score","shuffleCharacter","id","shuffle","setState","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","render","map","character","key","name","image","occupation","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNH,MAAAA,UAAU,EAAEA,UADN;AAENI,MAAAA,KAAK,EAAE;AAFD,KAFkB;;AAAA,SAO1BC,gBAP0B,GAOPC,EAAE,IAAI;AACvB;AACA;AACA;AACA;AACA,WAAKC,OAAL,CAAa,KAAKJ,KAAL,CAAWH,UAAxB;AACA,WAAKQ,QAAL,CAAc;AAACR,QAAAA,UAAU,EAAE,KAAKG,KAAL,CAAWH;AAAxB,OAAd;AACD,KAdyB;;AAAA,SAiB1BO,OAjB0B,GAiBhBE,KAAK,IAAI;AACjB,UAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,UAAiCC,cAAjC;AAAA,UAAiDC,WAAjD;;AAEA,aAAO,MAAMH,YAAb,EAA2B;AACzBG,QAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,QAAAA,YAAY,IAAI,CAAhB;AAEAE,QAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,QAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,QAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AACD,aAAOH,KAAP;AACD,KA7ByB;AAAA;;AA+B1B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAQ,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIG,KAAKD,KAAL,CAAWH,UAAX,CAAsBkB,GAAtB,CAA0BC,SAAS,IAClC,oBAAC,aAAD;AACE,MAAA,OAAO,EAAE,KAAKd,gBADhB;AAEE,MAAA,EAAE,EAAEc,SAAS,CAACb,EAFhB;AAEoB,MAAA,GAAG,EAAEa,SAAS,CAACC,GAFnC;AAGE,MAAA,IAAI,EAAED,SAAS,CAACE,IAHlB;AAIE,MAAA,KAAK,EAAEF,SAAS,CAACG,KAJnB;AAKE,MAAA,UAAU,EAAEH,SAAS,CAACI,UALxB;AAME,MAAA,QAAQ,EAAEJ,SAAS,CAACK,QANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJH,CADF;AAiBD;;AAhEyB;;AAmE5B,eAAetB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport CharacterCard from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\"\nimport characters from \"./characters.json\";\nimport Score from \"./components/Score\";\n\nclass App extends Component {\n\n  state = {\n    characters: characters,\n    score: 0\n  };\n\n  shuffleCharacter = id => {\n    // // Filter this.state.characters for characters with an id not equal to the id being removed\n    // const characters = this.state.characters.filter(character => character.id !== id);\n    // // Set this.state.characters equal to the new characters array\n    // this.setState({ characters });\n    this.shuffle(this.state.characters)\n    this.setState({characters: this.state.characters})\n  };\n  \n  \n  shuffle = array => {\n    let currentIndex = array.length, temporaryValue, randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array\n  }\n\n  // demo() {\n  //   const returnCharNames = this.state.characters.map(char => char.name);\n\n  //   return (\n  //     returnCharNames.map(name => {\n  //       if(name.includes('e')) {\n  //         return (<Title>This starts with a e</Title>)\n  //       } else {\n  //         return (<Title>{name}</Title>)\n  //       }\n  //     }\n  //     )\n  //   )\n  // }\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>Choose Your Character</Title>\n        {/* {this.demo()} */}\n        <Score score={this.state.score}/>\n        {this.state.characters.map(character => (\n          <CharacterCard \n            shuffle={this.shuffleCharacter} \n            id={character.id} key={character.key} \n            name={character.name} \n            image={character.image}\n            occupation={character.occupation}\n            location={character.location}\n            />\n        ))}\n      </Wrapper>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}